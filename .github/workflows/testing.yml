name: Testing

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend:
    name: Run tests and linters for backend
    runs-on: ubuntu-latest
    env:
      working-directory: ./backend
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true

      - name: Restore cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ${{ env.working-directory }}/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: ${{ env.working-directory }}
        run: |
          poetry install

      - name: Run linters
        working-directory: ${{ env.working-directory }}
        run: |
          poetry run pylint app --fail-under 9.5

      - name: Run tests
        working-directory: ${{ env.working-directory }}
        run: |
          poetry run pytest --cov=app --cov=tests --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          directory: ${{ env.working-directory }}

  frontend:
    name: Run tests and linters for frontend
    runs-on: ubuntu-latest
    env:
      working-directory: ./frontend
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v2
